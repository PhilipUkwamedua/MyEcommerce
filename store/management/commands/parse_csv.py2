import csv
import os
from pathlib import Path
from django.core.management.base import BaseCommand, CommandError

from django.contrib.auth.models import User
from store.models import *

class Command(BaseCommand):
    help = 'Import data from csv file'

    def handle(self, *args, **options):

        #drop all data from tables
        User.objects.all().delete()
        Product.objects.all().delete()
        Customer.objects.all().delete()
        Order.objects.all().delete()

        #create table again

        # open the file to read it into the database
        base_dir = Path(__file__).resolve().parent.parent.parent.parent
        filename = str(base_dir) + '/store/data/electronics_data.csv'
        with open(filename, 'rb') as f:
            content = f.read().decode('latin-1', 'ignore')
            reader = csv.reader(content.splitlines())
            next(reader) # skip the header line

            for row in reader:
                print(row)
                # process row
                # if len(row) < 12:
                #     next(reader)
                # elif row[2]=='' or row[4]=='' or row[5]=='' or row[6]=='':
                #     next(reader)
                # else:
                #     print(row)
                #     product = Product.objects.create(

                #         id = row[2],
                #         product = row[4],
                #         brand = row[5]),
                #         price = float(row[6]),
                        
                #     )
                #     product.save()

                #     fake = Faker()

                #     username=fake.name()+str(num)
                #     num=num+1
                #     email=fake.free_email()

                #     user = User.Objects.create_user(username=username,
                #                                     email=email,
                #                                     password='password')
                #     user.is_active = True
                #     user.save()

                #     customer = Customer.objects.create(
                #         user=user,
                #     )

                #     customer.save()
                #     for _ in range(1,4):
                #         order = Order.objects.crearte(
                #             transaction_id=str(number),
                #             customer=customer,

                #         )

                #         number+=1
                #         order.save()